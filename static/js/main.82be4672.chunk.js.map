{"version":3,"sources":["assets/pause.svg","assets/backward.svg","assets/forward.svg","assets/back.svg","assets/options.svg","assets/play.svg","assets/settings.svg","assets/spinner.svg","assets/replay.svg","registerServiceWorker.js","components/common/volume-bar.js","components/common/switch.js","components/common/section-break.js","components/common/utils.js","components/sidenav.js","components/common/react-hls.js","components/common/player.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Component","RedSwitch","withStyles","switchBase","color","red","&$checked","&$checked + $track","backgroundColor","checked","track","Switch","SwitchView","props","react_default","a","createElement","style","margin","onChange","handleChange","value","inputProps","aria-label","section_break","className","msToTime","duration","seconds","Math","floor","minutes","hours","useStyles","makeStyles","theme","userIcon","fontSize","SideNav","closeNav","document","getElementById","width","sections","currentSectionIndex","onSubsectionClick","sectionChange","selectedSectionIndex","currentSubsectionIndex","react","id","href","onClick","ArrowBackIos_default","sectionDesc","length","ArrowForwardIos_default","section","map","subSection","index","offSetMicroSeconds","subSecDesc","ReactHls","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goFull","state","isFull","setState","seek","e","_this$refs","refs","video","videoBack","progressBar","percent","offsetX","offsetWidth","currentTime","target","innerHTML","seekToTime","timeInMicroSeconds","_this$refs2","isPlaying","play","playPauseVideo","_this$refs3","switchedView","btnPlayPause","paused","ended","pause","stopVideo","muteVolume","_this$refs4","btnMute","muted","replayVideo","resetPlayer","updateProgressBar","_this$refs5","currentMillisecond","totalMilliseconds","percentage","changeButtonType","img","src","_this$refs6","forward","_this$refs7","backward","_this$refs8","exitFullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","lockOrientation","screen","orientation","lock","then","console","log","catch","error","alert","toggleFullScreen","player","requestFullscreen","fullScreenElement","cancelFullScreen","unlock","msRequestFullscreen","msFullscreenElement","mozRequestFullScreen","mozFullScreenElement","webkitRequestFullscreen","webkitFullscreenElement","webkitCancelFullScreen","handleMouseEnter","showVolume","handleMouseLeave","hideControls","showControls","openNav","change","onSubsectionChange","time","subsectionIndex","sectionIndex","playerId","Date","now","timeout","hls","React","createRef","_this$refs9","btnFullScreen","self","volumeBar","addEventListener","evt","type","_initPlayer","next","destroy","hls2","_this$props","frontUrl","hlsConfig","autoplay","backUrl","_this$refs10","Hls","loadSource","attachMedia","on","Events","MEDIA_ATTACHED","MANIFEST_PARSED","_this2","_this$state","_this$props2","poster","controls","videoProps","playerControls","playPauseControl","topControls","playerContainerControls","playButtonSrc","Pause","Play","title","accessKey","key","ref","assign","height","background","objectFit","display","preload","onMouseMove","clearTimeout","setTimeout","Backward","Forward","onFocus","min","max","Back","_this2$refs","sidenav","Options","onDoubleClick","defaultProps","Player","fetch","mode","resp","json","data","song_name","instructor_id","video_code","url","front_url","back_url","level","video_type","youtube_url","thumbnail_url","gif_url","is_active","release_date","createdAt","updatedAt","react_hls","startFragPrefetch","autoStartLoad","ReactDOM","render"],"mappings":"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","file":"static/js/main.82be4672.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pause.5b32ce7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward.b5d832b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/forward.06d1a095.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.140bf532.svg\";","module.exports = __webpack_public_path__ + \"static/media/options.13b598f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.c84559fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.65817086.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.5fcb6cd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/replay.c1ff9b44.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n\n// export default function registerServiceWorker() {\n//   if ('serviceWorker' in navigator) {\n\n//     window.addEventListener('load', function () {\n//       var t = '%PUBLIC_URL%/sw.js'\n//       console.log(t)\n\n//       navigator.serviceWorker.register(t).then(function (register) {\n//         console.log(\"worked\", register);\n//       }).catch(function (err) {\n//         console.log(\"error!\", err)\n//       });\n//     });\n\n//   }\n// }\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\n// export  function register() {\n//   if (process.env.NODE_ENV === '' && 'serviceWorker' in navigator) {\n//     // The URL constructor is available in all browsers that support SW.\n//     const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n//     if (publicUrl.origin !== window.location.origin) {\n//       // Our service worker won't work if PUBLIC_URL is on a different origin\n//       // from what our page is served on. This might happen if a CDN is used to\n//       // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n//       return;\n//     }\n\n//     window.addEventListener('load', () => {\n//       const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n//       if (isLocalhost) {\n//         // This is running on localhost. Lets check if a service worker still exists or not.\n//         checkValidServiceWorker(swUrl);\n\n//         // Add some additional logging to localhost, pointing developers to the\n//         // service worker/PWA documentation.\n//         navigator.serviceWorker.ready.then(() => {\n//           console.log(\n//             'This web app is being served cache-first by a service ' +\n//               'worker. To learn more, visit https://goo.gl/SC7cgQ'\n//           );\n//         });\n//       } else {\n//         // Is not local host. Just register service worker\n//         registerValidSW(swUrl);\n//       }\n//     });\n//   }\n// }\n\n// function registerValidSW(swUrl) {\n//   navigator.serviceWorker\n//     .register(swUrl)\n//     .then(registration => {\n//       registration.onupdatefound = () => {\n//         const installingWorker = registration.installing;\n//         installingWorker.onstatechange = () => {\n//           if (installingWorker.state === 'installed') {\n//             if (navigator.serviceWorker.controller) {\n//               // At this point, the old content will have been purged and\n//               // the fresh content will have been added to the cache.\n//               // It's the perfect time to display a \"New content is\n//               // available; please refresh.\" message in your web app.\n//               console.log('New content is available; please refresh.');\n//             } else {\n//               // At this point, everything has been precached.\n//               // It's the perfect time to display a\n//               // \"Content is cached for offline use.\" message.\n//               console.log('Content is cached for offline use.');\n//             }\n//           }\n//         };\n//       };\n//     })\n//     .catch(error => {\n//       console.error('Error during service worker registration:', error);\n//     });\n// }\n\n// function checkValidServiceWorker(swUrl) {\n//   // Check if the service worker can be found. If it can't reload the page.\n//   fetch(swUrl)\n//     .then(response => {\n//       // Ensure service worker exists, and that we really are getting a JS file.\n//       if (\n//         response.status === 404 ||\n//         response.headers.get('content-type').indexOf('javascript') === -1\n//       ) {\n//         // No service worker found. Probably a different app. Reload the page.\n//         navigator.serviceWorker.ready.then(registration => {\n//           registration.unregister().then(() => {\n//             window.location.reload();\n//           });\n//         });\n//       } else {\n//         // Service worker found. Proceed as normal.\n//         registerValidSW(swUrl);\n//       }\n//     })\n//     .catch(() => {\n//       console.log(\n//         'No internet connection found. App is running in offline mode.'\n//       );\n//     });\n// }\n\n// export function unregister() {\n//   if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.ready.then(registration => {\n//       registration.unregister();\n//     });\n//   }\n// }\n","import React, { Component } from 'react'\nimport Slider from 'react-rangeslider'\n\nclass VolumeBar extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      value: 0.5,\n      reverseValue: 8\n    }\n  }\n\n  handleChange = (value) => {\n    const {updateVolume} = this.props;\n    this.setState({\n      value: value\n    })\n\n    updateVolume(value);\n  }\n\n  handleChangeReverse = (value) => {\n    this.setState({\n      reverseValue: value\n    })\n  }\n\n  render () {\n    const { value, reverseValue } = this.state\n    return (\n      <div className='slider'>\n        <div className='slider-group'>\n          <div className='slider-vertical'>\n            <Slider\n              min={0}\n              max={1}\n              value={value}\n              step={0.1}\n              tooltip={false}\n              orientation='vertical'\n              onChange={this.handleChange}\n            />\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default VolumeBar","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nconst RedSwitch = withStyles({\n    switchBase: {\n      color: red[300],\n      '&$checked': {\n        color: red[400],\n      },\n      '&$checked + $track': {\n        backgroundColor: red[400],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\nexport default function SwitchView(props) {\n  return (\n    <div style={{    margin: 'auto'}}>\n      <RedSwitch\n        checked={props.SwitchView}\n        onChange={props.handleChange}\n        value={\"checked\"}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      </div>\n    )\n}","import React from 'react';\n\nexport default function() { \n    return <div className=\"break\" ><hr className=\"line-break\"/></div>\n}","import React from 'react';\n\n\nconst msToTime = (duration) => {\n    // duration = duration * 1000;\n  \n    var seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n    \n    if(hours == 0.0){\n      hours =  \"\"; \n    } \n    else {\n      hours = ((hours < 10) ? \"0\" + hours : hours) + \":\";\n    }\n    \n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n  \n    return hours + minutes + \":\" + seconds;\n}\n\nexport default msToTime;","import React, { useState, Fragment } from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport { Link } from \"react-scroll\";\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Replay from '../assets/replay.svg';\nimport SectionBreak from './common/section-break';\nimport msToTime from './common/utils';\n\nconst useStyles = makeStyles(theme => ({\n  userIcon: {\n    fontSize: '2.1em',\n  },\n}));\n\nfunction SideNav(props) {\n\n\n  const classes = useStyles();\n  function closeNav() {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n\n\n  const { sections, currentSectionIndex, onSubsectionClick, sectionChange,selectedSectionIndex, currentSubsectionIndex } = props;\n  // console.log(props);\n\n  return (\n    <Fragment>\n      <div id=\"mySidenav\" className=\"sidenav\">\n        <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={closeNav}>&times;</a>\n        <div className=\"section-container\">\n          <div className=\"section-header\">\n            {currentSectionIndex > 0 ? <ArrowBackIosIcon onClick={() => sectionChange(currentSectionIndex, -1)}\n              style={{ margin: 'auto' }} /> : <div></div>}\n            <h2> {sections[currentSectionIndex].sectionDesc}</h2>\n            {currentSectionIndex < (sections.length - 1 )? <ArrowForwardIosIcon onClick={() => sectionChange(currentSectionIndex, 1)}\n              style={{ margin: 'auto' }} /> : <div></div>}\n          </div>\n          {sections[currentSectionIndex].section.map((subSection, index) => {\n            return <Fragment>\n              <div onClick={() => { \n                onSubsectionClick(subSection.offSetMicroSeconds,index,currentSectionIndex);\n                closeNav();\n                }}\n                className={(currentSubsectionIndex == index && selectedSectionIndex == currentSectionIndex)  ? \"sub-section active\" : \"sub-section\"} >\n                <p>{msToTime(subSection.offSetMicroSeconds * 1000)}</p>\n                <p>{subSection.subSecDesc}</p>\n              </div>\n              <SectionBreak />\n            </Fragment>\n          })\n          }\n        </div>\n      </div>\n    </Fragment>);\n}\n\n\n\nexport default SideNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Hls from 'hls.js';\nimport Fullscreen from 'react-full-screen';\nimport DeviceOrientation, { Orientation } from 'react-screen-orientation';\n\nimport VolumeBar from './volume-bar';\nimport SwitchView from './switch';\nimport Pause from '../../assets/pause.svg'\nimport Backward from '../../assets/backward.svg';\nimport Forward from '../../assets/forward.svg';\nimport Back from '../../assets/back.svg';\nimport Settings from '../../assets/settings.svg';\nimport Options from '../../assets/options.svg';\nimport Spinner from '../../assets/spinner.svg';\n\nimport SideNav from '../../components/sidenav';\nimport Play from '../../assets/play.svg';\nimport msToTime from '../common/utils';\n\nclass ReactHls extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerId: Date.now(),\n            isFull: false,\n            showVolume: false,\n            showControls: false,\n            switchedView: false,\n            isPlaying: false,\n            currentMillisecond: 0.0,\n            totalMilliseconds: 1000,\n            currentSectionIndex: 0,\n            currentSubsectionIndex: 0,\n            selectedSectionIndex: 0,\n            timeout:null,\n        };\n\n        this.hls = null;\n        this.video = React.createRef();\n        // this.changeButtonType = this.changeButtonType.bind(this);\n    }\n\n    goFull = () => {\n        if (this.state.isFull) {\n            this.setState({ isFull: false });\n        }\n        else {\n            this.setState({ isFull: true });\n        }\n    }\n\n    // componentDidUpdate() {\n    //     this._initPlayer();\n    // }\n\n    componentDidMount() {\n        // Get a handle to the player\n\n        const { video, videoBack, btnPlayPause, btnMute, btnFullScreen, progressBar, volumeBar } = this.refs;\n\n\n        // Update the video volume\n        let self = this;\n        if (window.screen.orientation) {\n            window.screen.orientation.addEventListener(\"change\", function (evt) {\n                if (window.screen.orientation.type != 'landscape-primary' && self.state.isFull) {\n                    window.screen.orientation.unlock();\n                    self.goFull();\n                }\n            });\n        }\n\n        // btnFullScreen.disabled = true;\n        // Add a listener for the timeupdate event so we can update the progress bar\n        if (video) {\n            video.addEventListener('timeupdate', this.updateProgressBar, false);\n\n            let self = this;\n            // Add a listener for the play and pause events so the buttons state can be updated\n            video.addEventListener('play', function () {\n                // Change the button to be a pause button\n                // self.changeButtonType(btnPlayPause, Pause);\n            }, false);\n\n            video.addEventListener('pause', function () {\n                // Change the button to be a play button\n                // self.changeButtonType(btnPlayPause, Play );\n            }, false);\n\n\n            video.addEventListener('volumechange', function (e) {\n                // Update the button to be mute/unmute\n\n                // if (video.muted) self.changeButtonType(btnMute, 'Unmute');\n                // else self.changeButtonType(btnMute, 'Mute');\n            }, false);\n\n            video.addEventListener('ended', function () { this.pause(); }, false);\n        }\n\n        if (progressBar)\n            progressBar.addEventListener(\"click\", this.seek);\n\n        this._initPlayer(false);\n\n    }\n\n    componentWillUnmount() {\n        // let { hls } = this;\n\n        // if (hls) {\n        //     hls.destroy();\n        // }\n    }\n\n    _initPlayer(switchedView, next) {\n        if (this.hls) {\n            this.hls.destroy();\n            this.hls2.destroy();\n        }\n\n        let { frontUrl, autoplay, hlsConfig, backUrl } = this.props;\n        let { video, videoBack } = this.refs;\n        let { isPlaying } = this.state;\n\n        // console.log(switchedView)\n\n        let hls = new Hls(hlsConfig);\n        let hls2 = new Hls(hlsConfig)\n\n        let url = switchedView ? backUrl : frontUrl;\n\n        hls.loadSource(frontUrl);\n        hls.attachMedia(video);\n\n        hls2.loadSource(backUrl);\n        hls2.attachMedia(videoBack);\n\n\n\n\n        hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n            // console.log(\"video and hls.js are now bound together !\");\n            hls.on(Hls.Events.MANIFEST_PARSED, () => {\n\n                if (isPlaying) {\n                    video.play();\n                }\n            });\n        });\n\n        hls2.on(Hls.Events.MEDIA_ATTACHED, () => {\n            // console.log(\"video and hls2.js are now bound together !\");\n            hls2.on(Hls.Events.MANIFEST_PARSED, () => {\n\n                if (isPlaying) {\n                    videoBack.play();\n                }\n            });\n        });\n\n        this.hls = hls;\n        this.hls2 = hls2;\n\n        video.addEventListener('timeupdate', this.updateProgressBar, false);\n\n        if (next) {\n            next();\n        }\n    }\n\n    seek = (e) => {\n        const { video, videoBack, progressBar } = this.refs;\n        var percent = e.offsetX / progressBar.offsetWidth;\n        video.currentTime = percent * video.duration;\n        videoBack.currentTime = percent * video.duration;\n        e.target.value = Math.floor(percent / 100);\n        e.target.innerHTML = progressBar.value + '% played';\n    }\n\n    seekToTime = (timeInMicroSeconds) => {\n        const { video, videoBack } = this.refs;\n        const { isPlaying } = this.state;\n        video.currentTime = timeInMicroSeconds;\n        videoBack.currentTime = timeInMicroSeconds;\n        // video.play();\n        if (isPlaying) {\n            video.play();\n            videoBack.play();\n        }\n    }\n\n    playPauseVideo = () => {\n        const { video, videoBack, switchedView, btnPlayPause } = this.refs;\n\n\n        if (video.paused || video.ended) {\n            video.play();\n            videoBack.play();\n\n            this.setState({\n                isPlaying: true,\n            })\n        }\n        else {\n            video.pause();\n            videoBack.pause();\n\n            this.setState({\n                isPlaying: false,\n            })\n        }\n    }\n\n    // Stop the current media from playing, and return it to the start position\n    stopVideo = () => {\n        const { video } = this.refs;\n        video.pause();\n        // console.log(this.refs)\n\n        if (video.currentTime) video.currentTime = 0;\n        this.setState({\n            isPlaying: false,\n        })\n    }\n\n    // Toggles the media player's mute and unmute status\n    muteVolume = () => {\n\n        const { video, btnMute } = this.refs;\n\n        if (video.muted) {\n            // Change the button to a mute button\n            // this.changeButtonType(btnMute, 'Mute');\n            video.muted = false;\n        }\n        else {\n            // Change the button to an unmute button\n            // this.changeButtonType(btnMute, 'Unmute');\n            video.muted = true;\n        }\n    }\n\n    // Replays the media currently loaded in the player\n    replayVideo = () => {\n        const { video } = this.refs;\n        this.resetPlayer();\n        if (!video.paused)\n            video.play();\n    }\n\n    // Update the progress bar\n    updateProgressBar = () => {\n        const { video, progressBar } = this.refs;\n\n        // console.log(video.duration)\n\n        if (video) {\n            // console.log(video.currentTime*1000)\n            this.setState({\n                currentMillisecond: video.currentTime * 1000,\n                totalMilliseconds: !video.duration ? this.state.totalMilliseconds : video.duration * 1000,\n            })\n        }\n\n        // Work out how much of the media has played via the duration and currentTime parameters\n        var percentage = 0;\n        if (video && video.duration > 0) {\n            percentage = Math.floor((100 / video.duration) * video.currentTime);\n        }\n\n        // // console.log(percentage)\n        // // Update the progress bar's value\n        if (progressBar)\n            progressBar.value = percentage;\n        // Update the progress bar's text (for browsers that don't support the progress element)\n        // progressBar.innerHTML = percentage + '% played';\n    }\n\n    // Updates a button's title, innerHTML and CSS class\n    changeButtonType = (img, value) => {\n        // btn.title = value;\n        img.src = value;\n        // btn.className = value;\n    }\n\n    resetPlayer = () => {\n\n        const { progressBar, video, btnPlayPause } = this.refs;\n\n        progressBar.value = 0;\n        // Move the media back to the start\n        video.currentTime = 0;\n        // Set the play/pause button to 'play'\n        // this.changeButtonType(btnPlayPause, 'Play');\n    }\n\n    forward = () => {\n        const { progressBar, video, videoBack } = this.refs;\n        const { isPlaying } = this.state;\n        video.currentTime = video.currentTime + 15; // Todo: handle edge case here\n        videoBack.currentTime = videoBack.currentTime + 15;\n        // this.updateProgressBar();\n        if (isPlaying) {\n            video.play();\n            videoBack.play();\n        }\n    }\n\n    backward = () => {\n        const { progressBar, video, videoBack } = this.refs;\n        const { isPlaying } = this.state;\n        video.currentTime = video.currentTime - 15; // Todo: handle edge case here. \n        videoBack.currentTime = videoBack.currentTime - 15;\n        // this.updateProgressBar();\n        if (isPlaying) {\n            video.play();\n            videoBack.play();\n        }\n    }\n\n    exitFullScreen = () => {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n    lockOrientation = () => {\n        if (window.screen.orientation) {\n            window.screen.orientation.lock(\"landscape-primary\")\n                .then(function () {\n                    console.log(\"in landspace mode\")\n                })\n                .catch(function (error) {\n                    alert(error);\n                });\n        }\n    }\n    toggleFullScreen = () => {\n        const { player } = this.refs;\n\n        // this.goFull();\n\n        if (player.requestFullscreen)\n            if (document.fullScreenElement) {\n                document.cancelFullScreen();\n                window.screen.orientation.unlock();\n            } else {\n                player.requestFullscreen();\n                this.lockOrientation();\n            }\n        else if (player.msRequestFullscreen)\n            if (document.msFullscreenElement) {\n                document.msExitFullscreen();\n                window.screen.orientation.unlock();\n            } else {\n                player.msRequestFullscreen();\n                this.lockOrientation();\n            }\n        else if (player.mozRequestFullScreen)\n            if (document.mozFullScreenElement) {\n                document.mozCancelFullScreen();\n                window.screen.orientation.unlock();\n            } else {\n                player.mozRequestFullScreen();\n                this.lockOrientation();\n            }\n        else if (player.webkitRequestFullscreen)\n            if (document.webkitFullscreenElement) {\n                document.webkitCancelFullScreen();\n                window.screen.orientation.unlock();\n            } else {\n                player.webkitRequestFullscreen();\n                this.lockOrientation();\n            }\n\n        else {\n            alert(\"Fullscreen is not supported in your browser\");\n        }\n    }\n\n    handleMouseEnter = () => {\n        // console.log(\"test\");\n        this.setState({\n            showVolume: true,\n        })\n    }\n\n    handleMouseLeave = () => {\n        // console.log(\"test\");\n        this.setState({\n            showVolume: false,\n        })\n    }\n\n    hideControls = (e) => {\n\n        // console.log(e.clientX)\n\n        this.setState({\n            showControls: false,\n        })\n    }\n\n    openNav = () => {\n        document.getElementById(\"mySidenav\").style.width = \"45%\";\n    }\n\n    sectionChange = (currentSectionIndex, change) => {\n        this.setState({\n            currentSectionIndex: currentSectionIndex + change,\n        })\n    }\n\n    onSubsectionChange = (time, subsectionIndex, sectionIndex) => {\n        this.seekToTime(time);\n        this.setState({\n            selectedSectionIndex: sectionIndex,\n            currentSubsectionIndex: subsectionIndex,\n        })\n    }\n\n    render() {\n        let { playerId, isFull, isPlaying,timeout, selectedSectionIndex, currentMillisecond, currentSubsectionIndex, totalMilliseconds, currentSectionIndex, showVolume, showControls, switchedView } = this.state;\n        // let timeout;\n\n        const { controls, width, poster, videoProps, sections } = this.props;\n\n        // console.log(sections)\n\n        let height = '100%';\n\n        let playerControls = showControls ? \"player-controls show\" : \"player-controls\";\n        let playPauseControl = showControls ? \"playPause\" : \"playPauseShow\";\n        let topControls = showControls ? \"top-controls\" : \"top-controls-hide\";\n        let toggleFullScreen = isFull ? \"player-area-full\" : \"player-area\";\n        let playerContainerControls = showControls ? \"player-container-controls\" : \"player-container\";\n        let playButtonSrc = isPlaying ? Pause : Play;\n\n        if (!sections)\n            return <div></div>\n        return (\n            <section>\n                {!isFull && <p className='fullscreen' title='toggle full screen' accessKey=\"T\" onClick={() => {\n                    this.toggleFullScreen();\n                    this.goFull();\n                }}>Tap me to watch</p>}\n                <div key={playerId} className={toggleFullScreen}>\n                    {/* <Fullscreen\n                        enabled={this.state.isFull}\n                        onChange={isFull => this.setState({ isFull })}\n                    > */}\n                    <div ref=\"player\" className={playerContainerControls}>\n                        <video ref=\"video\"\n                            className=\"hls-player\"\n                            id={`react-hls-1`}\n                            //    controls={controls}\n                            width={'100%'}\n                            style={{\n                                height: height,\n                                background: 'black',\n                                objectFit: 'cover',\n                                display: switchedView ? 'none' : 'block',\n                            }}\n                            muted={!switchedView ? false : true}\n                            poster={poster}\n                            preload='metadata'\n                            onMouseMove={(e) => {\n                                clearTimeout(timeout);\n                                timeout = setTimeout(this.hideControls, 6500, e);\n                                if (!this.state.showControls) {\n                                    this.setState({\n                                        showControls: true,\n                                    })\n                                }\n                            }}\n\n                            {...videoProps}\n                        ></video>\n                        <video ref=\"videoBack\"\n                            className=\"hls-player\"\n                            id={`react-hls-2`}\n                            width={'100%'}\n                            style={{\n                                height: height,\n                                background: 'black',\n                                objectFit: 'cover',\n                                display: switchedView ? 'block' : 'none',\n                            }}\n                            muted={switchedView ? false : true}\n                            poster={poster}\n                            preload='metadata'\n                            onMouseMove={(e) => {\n                                clearTimeout(timeout);\n                                timeout = setTimeout(this.hideControls, 6500, e);\n                                if (!this.state.showControls) {\n                                    this.setState({\n                                        showControls: true,\n                                    })\n                                }\n                            }}\n\n                            {...videoProps}\n                        ></video>\n                        <div className={playPauseControl}>\n                            <img src={Backward} height=\"50px\" width=\"50px\" onClick={this.backward} />\n                            <img ref='btnPlayPause' src={playButtonSrc} height=\"50px\" width=\"50px\" onClick={this.playPauseVideo} />\n                            <img src={Forward} height=\"50px\" width=\"50px\" onClick={this.forward} />\n                        </div>\n                        <div id='controls' className={playerControls} onFocus={(e) => {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(this.hideControls, 6500, e);\n                            this.setState({\n                                showControls: true,\n                            })\n                        }}>\n\n                            <button className='play' title='play' accessKey=\"P\" onClick={this.playPauseVideo}>{msToTime(currentMillisecond)} </button>\n\n                            {/* <button ref='btnMute' className='mute' title='mute' onClick={this.muteVolume} >Mute</button> */}\n                            <progress ref='progressBar' min='0' max='100' value='0'>0% played</progress>\n\n\n                            <button className='mute' title='mute' onClick={this.forward}>{msToTime(totalMilliseconds)}</button>\n                            {/* <button className='mute' title='mute' onClick={this.backward}> &gt; 15  </button> */}\n                            <SwitchView switchedView={switchedView} handleChange={(value) => {\n                                const { video } = this.refs;\n                                // video.removeEventListener('timeupdate', this.updateProgressBar, false);\n\n                                // this._initPlayer(value.target.checked,() => { \n                                this.setState({\n                                    switchedView: value.target.checked,\n                                });\n                                // this.seekToTime(currentMillisecond / 1000);\n                                \n\n                                // });\n\n                            }} />\n                            {/* <button ref='btnReplay' className='replay' title='replay' accesskey=\"R\" onClick={this.replayVideo}>Replay</button> */}\n                        </div>\n                        <div className={topControls} >\n                            <img src={Back} height=\"30px\" width=\"30px\" onClick={() => {\n                                this.toggleFullScreen();\n                                this.goFull();\n                                const { video, videoBack } = this.refs;\n                                video.pause();\n                                videoBack.pause();\n\n                                this.setState({\n                                    isPlaying: false,\n                                })\n                            }} />\n                            <img></img>\n                            <SideNav\n                                onFocus={(e) => {\n                                    clearTimeout(timeout);\n                                    timeout = setTimeout(this.hideControls, 6500, e);\n                                    this.setState({\n                                        showControls: true,\n                                    })\n                                }}\n                                onSubsectionClick={this.onSubsectionChange}\n                                currentSectionIndex={currentSectionIndex}\n                                currentSubsectionIndex={currentSubsectionIndex}\n                                selectedSectionIndex={selectedSectionIndex}\n                                sections={sections}\n                                sectionChange={this.sectionChange}\n                            />\n                            <img src={Options} height=\"30px\" width=\"30px\" onClick={this.openNav} />\n                            {/* <img src={Settings} height=\"30px\" width=\"30px\" onClick={this.forward} /> */}\n                        </div>\n                        <div className=\"right-control\" onDoubleClick={this.forward}                             \n                                onMouseMove={(e) => {\n                                clearTimeout(timeout);\n                                timeout = setTimeout(this.hideControls, 6500, e);\n                                if (!this.state.showControls) {\n                                    this.setState({\n                                        showControls: true,\n                                    })\n                                }\n                            }}>\n                        </div>\n                        <div className=\"left-control\" onDoubleClick={this.backward}\n                                                    onMouseMove={(e) => {\n                                                        clearTimeout(timeout);\n                                                        timeout = setTimeout(this.hideControls, 6500, e);\n                                                        if (!this.state.showControls) {\n                                                            this.setState({\n                                                                showControls: true,\n                                                            })\n                                                        }\n                                                    }}\n                                                    >\n                        </div>\n                    </div>\n                    {/* </Fullscreen> */}\n                </div>\n            </section>\n        )\n    }\n}\n\nReactHls.propTypes = {\n    frontUrl: PropTypes.string.isRequired,\n    backUrl: PropTypes.string.isRequired,\n    autoplay: PropTypes.bool,\n    hlsConfig: PropTypes.object, //https://github.com/dailymotion/hls.js/blob/master/API.md#fine-tuning\n    controls: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    poster: PropTypes.string,\n    videoProps: PropTypes.object\n}\n\nReactHls.defaultProps = {\n    autoplay: false,\n    hlsConfig: {},\n    controls: true,\n    width: 500,\n    height: 375\n}\n\nexport default ReactHls;\n","import React, { Component } from 'react';\nimport ReactHLS from './react-hls';\n\nclass Player extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            video : { \"section\":{}},\n        }\n        const videoAPI = \"https://7mfhkvwjii.execute-api.us-east-1.amazonaws.com/dev/video/1\";\n        fetch(videoAPI,{\n            mode: 'cors',\n        })\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data);\n                \n        })\n\n    }\n\n    componentWillMount() {\n        this.setState({\n            video:{\n                \"id\": 1,\n                \"song_name\": \"DANCE OFF\",\n                \"instructor_id\": 5,\n                \"video_code\": \"NULL\",\n                \"url\": \"https://videos.theverbstudio.com/Classes/Full+class/Velu+Full+Class\",\n                \"front_url\": \"https://theverbmedia-output.s3.amazonaws.com/test/kartiktest.m3u8\",\n                \"back_url\": \"https://theverbmedia-output.s3.amazonaws.com/test/kartikinvertedtest.m3u8\",\n                \"level\": \"INTERMEDIATE\",\n                \"style\": \"HIP-HOP\",\n                \"length\": 62,\n                \"video_type\": \"STUDIO\",\n                \"youtube_url\": \"https://www.youtube.com/watch?v=Hr6NM9k6hLg\",\n                \"thumbnail_url\": \"https://d1c2wrc0o6t4ti.cloudfront.net/Classes/Mobile+UI/Thumbnails/Velu+Thumbnail.jpg\",\n                \"gif_url\": \"https://d1c2wrc0o6t4ti.cloudfront.net/Classes/Mobile+UI/Thumbnails/Velu+Thumbnail.jpg\",\n                \"is_active\": 1,\n                \"section\": {\n                    \"sections\": [\n                        {\n                            \"section\": [\n                                {\n                                    \"subSecDesc\": \"Moves\",\n                                    \"offSetMicroSeconds\": \"80\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Slow Tempo\",\n                                    \"offSetMicroSeconds\": \"563\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Medium Tempo \",\n                                    \"offSetMicroSeconds\": \"614\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Actual Tempo\",\n                                    \"offSetMicroSeconds\": \"789\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Watch\",\n                                    \"offSetMicroSeconds\": \"844\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Music\",\n                                    \"offSetMicroSeconds\": \"876\"\n                                }\n                            ],\n                            \"sectionDesc\": \"Section 1\"\n                        },\n                        {\n                            \"section\": [\n                                {\n                                    \"subSecDesc\": \"Moves\",\n                                    \"offSetMicroSeconds\": \"906\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Slow Tempo\",\n                                    \"offSetMicroSeconds\": \"1879\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Medium Tempo \",\n                                    \"offSetMicroSeconds\": \"1970\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Actual Tempo\",\n                                    \"offSetMicroSeconds\": \"2050\"\n                                },\n                                {\n                                    \"subSecDesc\": \"From The Top\",\n                                    \"offSetMicroSeconds\": \"2082\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Watch\",\n                                    \"offSetMicroSeconds\": \"2157\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Music\",\n                                    \"offSetMicroSeconds\": \"2210\"\n                                }\n                            ],\n                            \"sectionDesc\": \"Section 2\"\n                        },\n                        {\n                            \"section\": [\n                                {\n                                    \"subSecDesc\": \"Moves\",\n                                    \"offSetMicroSeconds\": \"2265\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Slow Tempo\",\n                                    \"offSetMicroSeconds\": \"3149\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Medium Tempo \",\n                                    \"offSetMicroSeconds\": \"3215\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Actual Tempo\",\n                                    \"offSetMicroSeconds\": \"3338\"\n                                },\n                                {\n                                    \"subSecDesc\": \"From The Top\",\n                                    \"offSetMicroSeconds\": \"3375\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Watch\",\n                                    \"offSetMicroSeconds\": \"3471\"\n                                },\n                                {\n                                    \"subSecDesc\": \"Music\",\n                                    \"offSetMicroSeconds\": \"3567\"\n                                }\n                            ],\n                            \"sectionDesc\": \"Section 3\"\n                        }\n                    ]\n                },\n                \"release_date\": \"2019-12-06T06:52:41.000Z\",\n                \"createdAt\": \"2019-12-06T01:22:41.000Z\",\n                \"updatedAt\": \"2019-12-06T01:22:41.000Z\"\n            }\n        })\n    }\n\n    render(){\n        const { video } = this.state;\n        return <ReactHLS hlsConfig={{startFragPrefetch:true,autoStartLoad:true}} poster={video.thumbnail_url} sections={video.section.sections} frontUrl={video.front_url} backUrl={video.back_url}/>;\n    }\n}\n\n\nexport default Player;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Player from './components/common/player';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Player />, document.getElementById('root'));\n// registerServiceWorker();\n\n// navigator.serviceWorker.register(`${process.env.PUBLIC_URL}/sw.js`).then(function (register) {\n//     console.log(\"worked\", register);\n// }).catch(function (err) {\n//     console.log(\"error!\",err)\n// });\n\n"],"sourceRoot":""}